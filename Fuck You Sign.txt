if _G.Parts == nil then
_G.Parts = {}
game.Workspace.ChildAdded:connect(function(Ch)
wait(5)
if game.Players:FindFirstChild(tostring(Ch)) then
local Tor = Ch.Torso
local Part = Instance.new("Part", Tor)
Part.Size = Vector3.new(4, 5, 2)
Part.Transparency = 1
Part.CanCollide = false
local Weld = Instance.new("Weld", Tor)
Weld.Part0 = Tor
Weld.Part1 = Part
Weld.C0 = CFrame.new(0, -0.5, 0)
table.insert(_G.Parts, Part)
end
end)
for i, v in pairs(game.Players:GetPlayers()) do
if v.Character ~= nil then 
local Tor = v.Character.Torso
local Part = Instance.new("Part", Tor)
Part.Size = Vector3.new(4, 5, 2)
Part.Transparency = 1
Part.CanCollide = false
local Weld = Instance.new("Weld", Tor)
Weld.Part0 = Tor
Weld.Part1 = Part
Weld.C0 = CFrame.new(0, -0.5, 0)
table.insert(_G.Parts, Part)
end
end
end
if _G.TouchParts == nil then
_G.TouchParts = {}
spawn(function()
while wait(0.1) do
for b = 1, #_G.Parts do
for i, v in pairs(_G.TouchParts) do
-- v = {"Kill"} or v = {"Teleport", Position}
if i ~= nil and _G.Parts[b] ~= nil and (i.Position - _G.Parts[b].Position).magnitude <= GetBiggestSize(i)/2 then
if v[1] == "Kill" then
KillPlayer(_G.Parts[b])
elseif v[1] == "Teleport" then
TeleportPlayer(_G.Parts[b], v[2])
end
break
end
end
end
end
end)
end

R = game.Workspace.Remote
Mats = game.Lighting.Materials
SpecialBypass = true
if not debug == nil or not debug.getupvalues then
SpecialBypass = false
function KillPlayer(Part)
Plr = GetPlayer(Part)
if Plr ~= nil and Plr:FindFirstChild("Humanoid") and Plr:FindFirstChild("HumanoidRootPart") then
local H = Plr.HumanoidRootPart
Position = H.Position
R.AddClothing:FireServer("IsBuildingMaterial", H, "", "", "")
repeat
wait()
until H:FindFirstChild("IsBuildingMaterial")
R.ReplicatePart:FireServer(H, CFrame.new(Position.X, -10000, Position.Z))
end
end
elseif SpecialBypass == true then
Serial = nil
GetKey = nil
local metaCall = getrawmetatable(getrenv().shared)
for i, v in pairs(debug.getupvalues(metaCall.__index)) do
if i == 3 then
for a, b in pairs(debug.getupvalues(v)) do
if a == 6 then
Serial = b
elseif a == 7 then
GetKey = b
end
end
end
end
function fireserver(Re, ...)
Re = R[tostring(Re)]
Re:FireServer(Serial({...}, GetKey()))
end
function MoveItem(Item, Par)
fireserver("GrabItem", Par, game.Players, Item)
end
function KillPlayer(Part)
Plr = GetPlayer(Part)
if Plr ~= nil and Plr:FindFirstChild("Humanoid") then
fireserver("GrabItem", Plr.HumanoidRootPart, game.Players, Plr.Head)
end
end
function FillChest(Chest, ItemList)
LootDrops = game.Lighting.LootDrops
Storage = Chest.Head.storage
if not game.Lighting:FindFirstChild("PatientZero") then return end
SacrificeItem = game.Lighting.PatientZero
SacPar = SacrificeItem.Parent
MoveItem(SacrificeItem, Mats)
Count()
local AcceptedItems = 0
for i = 1, #ItemList do
if LootDrops:FindFirstChild(ItemList[i]) and LootDrops[ItemList[i]]:FindFirstChild("ObjectID") then
ItemList[i] = {LootDrops[ItemList[i]].ObjectID, LootDrops[ItemList[i]]}
MoveItem(ItemList[i][1], SacrificeItem)
AcceptedItems = AcceptedItems + 1
Count()
end
end
repeat
wait()
until SacrificeItem.Parent == Mats and #SacrificeItem:GetChildren() >= AcceptedItems
pcall(function() R["PlaceMaterial"]:FireServer(tostring(SacrificeItem), Vector3.new(0, 0, 0)) end)
Count()
repeat
wait()
until game.Workspace:FindFirstChild(tostring(SacrificeItem))
MoveItem(SacrificeItem, SacPar)
Count()
for i = 1, #ItemList do
if ItemList[i][1] ~= nil then
MoveItem(ItemList[i][1], ItemList[i][2])
Count()
end
end
local ItemHolder = game.Workspace:FindFirstChild(tostring(SacrificeItem))
local Amount = 0
for i, v in pairs(ItemHolder:GetChildren()) do
if v.Name == "ObjectID" then
Amount = Amount + 1
MoveItem(v, Storage["slot"..tostring(Amount)])
Count()
end
end
wait()
for i, v in pairs(game.Workspace:GetChildren()) do 
if v.Name == tostring(SacrificeItem) then
MoveItem(v, game.ReplicatedStorage.DefaultChatSystemChatEvents.OnUnmuted)
Count()
end
end
end
end

function TeleportPlayer(Part, Position)
Plr = GetPlayer(Part)
if Plr ~= nil and Plr:FindFirstChild("Humanoid") and Plr:FindFirstChild("HumanoidRootPart") then
local H = Plr.HumanoidRootPart
R.AddClothing:FireServer("IsBuildingMaterial", H, "", "", "")
repeat
wait()
until H:FindFirstChild("IsBuildingMaterial")
R.ReplicatePart:FireServer(H, CFrame.new(Position.X, Position.Y, Position.Z))
end
end

function GetPlayer(T)
if T == nil or T.Parent == nil then
return nil
end
repeat
T = T.Parent
until T == nil or T.Parent == nil or T:FindFirstChild("Head") and T:FindFirstChild("HumanoidRootPart")
return T
end

function GetBiggestSize(Part)
local Side = Part.Size.X
if Part.Size.Y > Side then
Side = Part.Size.Y
end
if Part.Size.Z > Side then
Side = Part.Size.Z
end
if Side/2 < 4 then
Side = 8
end
return Side
end

function HandleSpecial(Item, Tab, Pos)
if SpecialBypass == false and not (Tab[1] == "Teleport" or Tab[1] == "Kill") then
return
end
if Tab[1] == "Kill" or Tab[1] == "Teleport" then
local ItemsTab = {}
if Item:IsA("BasePart") then
table.insert(ItemsTab, Item)
elseif Item:IsA("Model") then
for i, v in pairs(Item:GetChildren()) do
if v:IsA("BasePart") then
table.insert(ItemsTab, v)
end
end
end
for i = 1, #ItemsTab do
if Tab[1] == "Kill" then
_G.TouchParts[ItemsTab[i]] = {"Kill"}
elseif Tab[1] == "Teleport" then
_G.TouchParts[ItemsTab[i]] = {"Teleport", Pos+Tab[2]}
end
end
elseif Tab[1] == "Fill" then
FillChest(Item, Tab[2])
end
end

function PlaceItem(Item, Pos, Val)
pcall(function() R["PlaceMaterial"]:FireServer(tostring(Item), Pos-Mats[tostring(Item)].Head.Position, false, Val) end)
end
Times = 0
MaxTimes = 1000
function Count()
Times = Times + 1
if Times > MaxTimes then
wait(1)
Times = 0
end
end

function SpawnParts(Item, Amount, Val)
PlrPos = game.Players.LocalPlayer.Character.Head.Position
for i = 1, Amount do
PlaceItem(Item, PlrPos+Vector3.new(0, 10, 0), Val)
Count()
end
end

function CountParts(TheWS, Item, Val)
local Amount = 0
local Parts = {}
for i, v in pairs(game.Workspace:GetChildren()) do
if TheWS[v] ~= true and v:FindFirstChild("IsBuildingMaterial") and (v:IsA("BasePart") and v.Size == Mats[Item].Head.Size or Val == true and v:FindFirstChild("Head") and v.Name == Item) then
Amount = Amount + 1
table.insert(Parts, v)
end
end
return {Amount, Parts}
end

function MoveParts(Items, ItemTab, Spot)
local Broken = false
for i = 1, #Items do
if ItemTab[i] == nil then
Broken = true
if Items[i]:FindFirstChild("Head") then
R.ReplicateModel:FireServer(Items[i], CFrame.new(100000, -100, 1000))
else
R.ReplicatePart:FireServer(Items[i], CFrame.new(100000, -100, 1000))
end
elseif ItemTab[i] ~= nil and ItemTab[i][3] ~= nil then
HandleSpecial(Items[i], ItemTab[i][3], Spot)
end
if not Items[i]:FindFirstChild("Head") and Broken ~= true then
local Pos = (ItemTab[i][2]+Spot+ItemTab[i][1])
R.ReplicatePart:FireServer(Items[i], Pos)
elseif Broken ~= true then
local Pos = (ItemTab[i][2]+ItemTab[i][1]+Spot)
R.ReplicateModel:FireServer(Items[i], Pos)
end
Count()
end
end

function SpawnBase(Tab, Spot)
for i = 1, #Tab do
local Item = Tab[i]["Item"]
local Amount = Tab[i]["Amount"]
local Whole = Tab[i]["Whole"]
local WS = {}
for i, v in pairs(game.Workspace:GetChildren()) do
WS[v] = true
end
SpawnParts(Item, Amount, not Whole)
repeat
wait()
until (Whole == false and CountParts(WS, Item, Whole)[1] == #Mats[Item]:GetChildren()*Amount) or (Whole == true and CountParts(WS, Item, Whole)[1] == Amount)
local PartsTab = CountParts(WS, Item, Whole)[2]
MoveParts(PartsTab, Tab[i], Spot)
end
end

getrenv()["_G"].SendMessage("The base is loading. Spawning this base can cause lag!","Red")



  local FuckYouSign = {
  {["Item"] = "Planks", ["Amount"] = 4, ["Whole"] = false, {Vector3.new(-13.0999756, 33.9998932, 44.9998779), CFrame.new(0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0)}, {Vector3.new(-13.0999756, 45.0000381, 49.9998779), CFrame.new(0, 0, 0, 0, 1, -0, -1, 0, 0, 0, 0, 1)}, {Vector3.new(-13.0999756, 37.0000381, 49.9998779), CFrame.new(0, 0, 0, 0, 1, -0, -1, 0, 0, 0, 0, 1)}, {Vector3.new(-13.0999756, 45.0000381, 39.9998779), CFrame.new(0, 0, 0, 0, 1, -0, -1, 0, 0, 0, 0, 1)}, {Vector3.new(-13.0999756, 37.0000381, 39.9998779), CFrame.new(0, 0, 0, 0, 1, -0, -1, 0, 0, 0, 0, 1)}, {Vector3.new(-13.0999756, 47.9998932, 29.9998779), CFrame.new(0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0)}, {Vector3.new(-13.0999756, 45.0000381, 24.9998779), CFrame.new(0, 0, 0, 0, 1, -0, -1, 0, 0, 0, 0, 1)}, {Vector3.new(-13.0999756, 37.0000381, 24.9998779), CFrame.new(0, 0, 0, 0, 1, -0, -1, 0, 0, 0, 0, 1)}, {Vector3.new(-13.0999756, 45.0000381, 34.9998779), CFrame.new(0, 0, 0, 0, 1, -0, -1, 0, 0, 0, 0, 1)}, {Vector3.new(-13.0999756, 37.0000305, 34.9998779), CFrame.new(0, 0, 0, 0, 1, -0, -1, 0, 0, 0, 0, 1)}, {Vector3.new(-13.0999756, 33.9998932, 29.9998779), CFrame.new(0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0)}, {Vector3.new(-13.0999756, 37.0000229, -51.0001221), CFrame.new(0, 0, 0, 0, 1, -0, -1, 0, 0, 0, 0, 1)}, {Vector3.new(-13.0999756, 45.0000267, -51.0001221), CFrame.new(0, 0, 0, 0, 1, -0, -1, 0, 0, 0, 0, 1)}, {Vector3.new(-13.0999756, 53.0000381, -51.0001221), CFrame.new(0, 0, 0, 0, 1, -0, -1, 0, 0, 0, 0, 1)}, {Vector3.new(-13.0999756, 55.9998932, -46.0001221), CFrame.new(0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0)}, {Vector3.new(-13.0999756, 47.9998932, -46.0001221), CFrame.new(0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0)}, {Vector3.new(-13.0999756, 37.0000076, -39.0001221), CFrame.new(0, 0, 0, 0, 1, -0, -1, 0, 0, 0, 0, 1)}, {Vector3.new(-13.0999756, 45.0000153, -39.0001221), CFrame.new(0, 0, 0, 0, 1, -0, -1, 0, 0, 0, 0, 1)}, {Vector3.new(-13.0999756, 33.9998932, -34.0001221), CFrame.new(0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0)}, {Vector3.new(-13.0999756, 37.0000191, -29.0001221), CFrame.new(0, 0, 0, 0, 1, -0, -1, 0, 0, 0, 0, 1)}, {Vector3.new(-13.0999756, 45.0000267, -29.0001221), CFrame.new(0, 0, 0, 0, 1, -0, -1, 0, 0, 0, 0, 1)}, {Vector3.new(-13.0999756, 51.5845375, 11.756958), CFrame.new(0, 0, 0, 0, 1, 0, 0.707106829, 0, -0.707106829, -0.707106829, 0, -0.707106829)}, {Vector3.new(-13.0999756, 51.5846519, 20.2421875), CFrame.new(0, 0, 0, 0, 1, 0, -0.707106829, 0, -0.707106829, -0.707106829, 0, 0.707106829)}, {Vector3.new(-13.0999756, 44.9989548, 15.9998779), CFrame.new(0, 0, 0, 0, 1, -0, -1, 0, 0, 0, 0, 1)}, {Vector3.new(-13.0999756, 36.9989395, 15.9998779), CFrame.new(0, 0, 0, 0, 1, -0, -1, 0, 0, 0, 0, 1)}, {Vector3.new(-13.0999756, 47.9998932, -15.0001221), CFrame.new(0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0)}, {Vector3.new(-13.0999756, 37.0000305, -20.0001221), CFrame.new(0, 0, 0, 0, 1, -0, -1, 0, 0, 0, 0, 1)}, {Vector3.new(-13.0999756, 45.0000381, -20.0001221), CFrame.new(0, 0, 0, 0, 1, -0, -1, 0, 0, 0, 0, 1)}, {Vector3.new(-13.0999756, 33.9998932, -15.0001221), CFrame.new(0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0)}, {Vector3.new(-13.0999756, 37.0000381, -5.00012207), CFrame.new(0, 0, 0, 0, 1, -0, -1, 0, 0, 0, 0, 1)}, {Vector3.new(-13.0999756, 45.0000381, -5.00012207), CFrame.new(0, 0, 0, 0, 1, -0, -1, 0, 0, 0, 0, 1)}, {Vector3.new(-13.0999756, 46.6361656, 0.12109375), CFrame.new(0, 0, 0, 0, 1, 0, -0.707106829, 0, -0.707106829, -0.707106829, 0, 0.707106829)}, {Vector3.new(-13.0999756, 38.1507072, 0.120361328), CFrame.new(0, 0, 0, 0, 1, 0, 0.707106829, 0, -0.707106829, -0.707106829, 0, -0.707106829)}}
  , 
  {["Item"] = "Timber", ["Amount"] = 4, ["Whole"] = false, {Vector3.new(-11.9001465, 0, -55), CFrame.new(0, 0, 0, 0, -1, 0, 0, 0, -1, 1, 0, 0)}, {Vector3.new(-11.9001465, 12, -55), CFrame.new(0, 0, 0, 0, -1, 0, 0, 0, -1, 1, 0, 0)}, {Vector3.new(-11.9001465, 24.0000076, -55), CFrame.new(0, 0, 0, 0, -1, 0, 0, 0, -1, 1, 0, 0)}, {Vector3.new(13.0997314, 24, -55), CFrame.new(0, 0, 0, 0, -1, 0, 0, 0, -1, 1, 0, 0)}, {Vector3.new(13.0999756, 0, -55), CFrame.new(0, 0, 0, 0, -1, 0, 0, 0, -1, 1, 0, 0)}, {Vector3.new(13.0999756, 12, -55), CFrame.new(0, 0, 0, 0, -1, 0, 0, 0, -1, 1, 0, 0)}, {Vector3.new(13.0999756, 0, 55), CFrame.new(0, 0, 0, 0, -1, 0, 0, 0, -1, 1, 0, 0)}, {Vector3.new(13.0999756, 12, 55), CFrame.new(0, 0, 0, 0, -1, 0, 0, 0, -1, 1, 0, 0)}, {Vector3.new(13.0999756, 24.0000076, 55), CFrame.new(0, 0, 0, 0, -1, 0, 0, 0, -1, 1, 0, 0)}, {Vector3.new(-11.9001465, 0, 55), CFrame.new(0, 0, 0, 0, -1, 0, 0, 0, -1, 1, 0, 0)}, {Vector3.new(-11.9001465, 12, 55), CFrame.new(0, 0, 0, 0, -1, 0, 0, 0, -1, 1, 0, 0)}, {Vector3.new(-11.9001465, 24.0000076, 55), CFrame.new(0, 0, 0, 0, -1, 0, 0, 0, -1, 1, 0, 0)}}
  , 
  {["Item"] = "Walls", ["Amount"] = 174, ["Whole"] = true, {Vector3.new(9.59997559, 50.9980164, 50.9998779), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(9.59997559, 56.9980164, 50.9998779), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(9.59997559, 44.9980164, 50.9998779), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(9.59997559, 38.9980164, 50.9998779), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(9.59997559, 32.9980164, 50.9998779), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(0.599975586, 56.9979782, 50.9998779), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(9.59997559, 32.9984741, 34.9998779), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(-8.40002441, 50.9983444, 34.9998779), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(0.599975586, 32.9980087, 50.9998779), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(9.59997559, 56.9982605, 34.9998779), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(-8.40002441, 56.9979782, 50.9998779), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(0.599975586, 33.0000229, -53.0001221), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(-8.40002441, 33.0000229, -53.0001221), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(9.59997559, 33.0000229, -53.0001221), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(-8.40002441, 39.0000229, -53.0001221), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(-8.40002441, 45.0000229, -53.0001221), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(-8.40002441, 51.0000229, -53.0001221), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(-8.40002441, 57.0000153, -53.0001221), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(-8.40002441, 50.9979782, 50.9998779), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(-8.40002441, 44.9979782, 50.9998779), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(-8.40002441, 38.9979935, 50.9998779), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(0.599975586, 57.0000153, -53.0001221), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(9.59997559, 39.0000229, -53.0001221), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(9.59997559, 45.0000229, -53.0001221), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(9.59997559, 51.0000229, -53.0001221), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(9.59997559, 57.0000153, -53.0001221), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(-8.40002441, 33.0000076, -45.0001221), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(-8.40002441, 38.9999924, -45.0001221), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(-8.40002441, 44.9999924, -45.0001221), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(-8.40002441, 56.9999542, -45.0001221), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(0.599975586, 56.9999542, -45.0001221), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(9.59997559, 56.9999542, -45.0001221), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(9.59997559, 44.9999924, -45.0001221), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(9.59997559, 38.9999924, -45.0001221), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(9.59997559, 33.0000076, -45.0001221), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(-8.40002441, 50.9999695, -45.0001221), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(9.59997559, 50.9999695, -45.0001221), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(-8.40002441, 32.9980087, 50.9998779), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(0.599975586, 33.0000076, -45.0001221), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(-8.40002441, 32.9999619, -37.0001221), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(-8.40002441, 38.999939, -37.0001221), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(-8.40002441, 44.9999237, -37.0001221), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(-8.40002441, 56.9998627, -37.0001221), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(0.599975586, 56.9998627, -37.0001221), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(9.59997559, 56.9998627, -37.0001221), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(9.59997559, 44.9999237, -37.0001221), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(9.59997559, 38.999939, -37.0001221), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(9.59997559, 32.9999542, -37.0001221), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(0.599975586, 56.9980087, 42.9998779), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(-8.40002441, 50.9998932, -37.0001221), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(9.59997559, 50.9998932, -37.0001221), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(0.599975586, 32.9999619, -37.0001221), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(-8.40002441, 32.9998627, -29.0001221), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(-8.40002441, 38.9998169, -29.0001221), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(-8.40002441, 44.9997864, -29.0001221), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(0.599975586, 56.9996567, -29.0001221), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(9.59997559, 56.9996567, -29.0001221), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(9.59997559, 44.9997864, -29.0001221), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(9.59997559, 38.9998169, -29.0001221), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(-8.40002441, 56.9996567, -29.0001221), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(9.59997559, 32.9982605, 42.9998779), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(-8.40002441, 50.9997253, -29.0001221), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(9.59997559, 44.9983673, 34.9998779), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(9.59997559, 50.9997253, -29.0001221), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(0.599975586, 32.9998627, -29.0001221), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(-8.40002441, 32.9996643, -21.0001221), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(-8.40002441, 38.9995956, -21.0001221), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(-8.40002441, 44.9995499, -21.0001221), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(0.599975586, 56.9993973, -21.0001221), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(9.59997559, 56.9993973, -21.0001221), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(9.59997559, 44.9995499, -21.0001221), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(9.59997559, 38.9995956, -21.0001221), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(-8.40002441, 56.9993973, -21.0001221), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(-8.40002441, 38.9982262, 42.9998779), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(-8.40002441, 50.9994583, -21.0001221), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(-8.40002441, 44.9983673, 34.9998779), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(9.59997559, 50.9994583, -21.0001221), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(0.599975586, 32.9996643, -21.0001221), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(9.59997559, 32.9998703, -29.0001221), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(9.59997559, 32.9998703, -21.0001221), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(-8.40002441, 32.9994125, -13.0001221), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(-8.40002441, 38.9993896, -13.0001221), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(-8.40002441, 44.9993668, -13.0001221), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(-8.40002441, 50.9993591, -13.0001221), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(-8.40002441, 56.9993591, -13.0001221), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(0.599975586, 32.9994125, -13.0001221), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(-8.40002441, 50.998085, 42.9998779), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(9.59997559, 38.9984436, 34.9998779), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(0.599975586, 56.9993591, -13.0001221), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(9.59997559, 32.9994049, -13.0001221), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(9.59997559, 38.9993896, -13.0001221), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(9.59997559, 44.9993668, -13.0001221), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(9.59997559, 50.9993591, -13.0001221), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(9.59997559, 56.9993591, -13.0001221), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(-8.40002441, 44.9992905, -5.00012207), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(9.59997559, 56.9992218, -5.00012207), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(-8.40002441, 56.9992218, -5.00012207), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(0.599975586, 56.9992218, -5.00012207), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(9.59997559, 32.9993668, -5.00012207), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(9.59997559, 38.999321, -5.00012207), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(-8.40002441, 32.9993858, -5.00012207), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(0.599975586, 32.9993858, -5.00012207), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(-8.40002441, 38.999321, -5.00012207), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(-8.40002441, 50.9992676, -5.00012207), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(9.59997559, 44.9992905, -5.00012207), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(9.59997559, 50.9992676, -5.00012207), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(-8.40002441, 32.9983063, 42.9998779), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(9.59997559, 44.9981232, 42.9998779), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(-8.40002441, 44.9990997, 2.99987793), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(9.59997559, 56.9989853, 2.99987793), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(-8.40002441, 56.9989853, 2.99987793), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(0.599975586, 56.9989853, 2.99987793), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(9.59997559, 32.9992142, 2.99987793), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(9.59997559, 38.9991684, 2.99987793), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(-8.40002441, 32.9992371, 2.99987793), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(0.599975586, 32.9992371, 2.99987793), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(-8.40002441, 38.9991684, 2.99987793), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(-8.40002441, 50.9990463, 2.99987793), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(9.59997559, 44.9990997, 2.99987793), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(9.59997559, 50.9990463, 2.99987793), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(-8.40002441, 44.9981232, 42.9998779), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(0.599975586, 32.9983063, 42.9998779), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(-8.40002441, 44.9988708, 10.9998779), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(9.59997559, 56.9986877, 10.9998779), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(-8.40002441, 56.9986877, 10.9998779), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(0.599975586, 56.9986877, 10.9998779), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(9.59997559, 32.9990005, 10.9998779), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(9.59997559, 38.9989395, 10.9998779), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(-8.40002441, 32.9990463, 10.9998779), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(0.599975586, 32.9990463, 10.9998779), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(-8.40002441, 38.9989395, 10.9998779), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(-8.40002441, 50.9987946, 10.9998779), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(9.59997559, 44.9988708, 10.9998779), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(9.59997559, 50.9987946, 10.9998779), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(9.59997559, 50.9983444, 34.9998779), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(-8.40002441, 32.9985046, 34.9998779), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(-8.40002441, 32.9986954, 18.9998779), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(-8.40002441, 38.9986801, 18.9998779), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(-8.40002441, 44.9986572, 18.9998779), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(-8.40002441, 50.9986382, 18.9998779), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(-8.40002441, 56.9986115, 18.9998779), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(0.599975586, 32.9986954, 18.9998779), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(9.59997559, 38.9982262, 42.9998779), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(9.59997559, 50.998085, 42.9998779), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(-8.40002441, 38.9984436, 34.9998779), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(0.599975586, 56.9986115, 18.9998779), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(9.59997559, 32.9986877, 18.9998779), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(9.59997559, 38.9986801, 18.9998779), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(9.59997559, 44.9986572, 18.9998779), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(9.59997559, 50.9986382, 18.9998779), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(9.59997559, 56.9986115, 18.9998779), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(0.599975586, 32.9986267, 26.9998779), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(-8.40002441, 56.9984589, 26.9998779), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(9.59997559, 38.9985809, 26.9998779), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(-8.40002441, 56.9980087, 42.9998779), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(9.59997559, 56.9980087, 42.9998779), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(-8.40002441, 32.9986267, 26.9998779), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(-8.40002441, 50.9985123, 26.9998779), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(-8.40002441, 38.9985809, 26.9998779), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(9.59997559, 32.9985962, 26.9998779), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(0.599975586, 56.9984589, 26.9998779), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(0.599975586, 56.9982605, 34.9998779), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(-8.40002441, 44.9985199, 26.9998779), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(9.59997559, 44.9985199, 26.9998779), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(9.59997559, 56.9984589, 26.9998779), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(9.59997559, 50.9985123, 26.9998779), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(0.599975586, 32.9985046, 34.9998779), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(-8.40002441, 56.9982605, 34.9998779), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(0.599975586, 39.0000229, -53.0001221), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(0.599975586, 45.0000229, -53.0001221), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(0.599975586, 51.0000229, -53.0001221), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(0.599975586, 38.998024, 50.9998779), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(0.599975586, 44.9980354, 50.9998779), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}, {Vector3.new(0.599975586, 50.9980469, 50.9998779), CFrame.new(0, 0, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)}}
  }

SpawnBase(FuckYouSign, game.Players.LocalPlayer.Character.Head.Position-Vector3.new(0, 4, 0))

getrenv()["_G"].SendMessage("Sign Spawned","Green")
wait (0.6)
getrenv()["_G"].SendMessage("U may lag","Blue")
